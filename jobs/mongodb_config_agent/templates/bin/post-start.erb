#!/bin/bash -e
# vim: set ft=sh

export PATH=/var/vcap/packages/jq/bin:/var/vcap/packages/mongodb/bin:$PATH

source /var/vcap/packages/mongodb-config-agent/mongo_utils.sh
export MONGO_OM_URL='<%= p('mongo_ops.url').chomp("/") %>'
export MONGO_OM_USER='<%= p('mongo_ops.username') %>'
export MONGO_OM_API_KEY='<%= p('mongo_ops.api_key') %>'
export MONGO_OM_GROUP_ID='<%= p('mongo_ops.group_id') %>'
export JOB_DIR=/var/vcap/jobs/mongodb_config_agent

<%
def node_name(instance)
  "#{instance.id}"
end

aliases = []

link('mongod_node').instances.each do |instance|
  mongod_alias = "#{node_name(instance)}.mongodb.internal"
  aliases.push(mongod_alias)
end
%>

<% if p("mongo_ops.plan_id") == "sharded_cluster" %>
port=$(om_api_call "GET" "hosts" | jq -r '[.results[] | select(.typeName == "SHARD_MONGOS")] | first | .port')
<% else %>
port=$(om_api_call "GET" "hosts" | jq -r ".results[0].port")
<% end %>

<% if p("mongo_ops.require_ssl") %>
connection_opts="--host <%= aliases.join(',') %> --port ${port} --ssl --sslPEMKeyFile $JOB_DIR/config/server.pem --sslCAFile $JOB_DIR/config/cacert.pem"
<% else %>
connection_opts="--host <%= link("mongod_node").instances.map {|e| e.address}.join(',') %> --port ${port} -p <%= p("mongo_ops.admin_password") %> -u admin"
<% end %>

echo "Waiting 600s for MongoDB to accept connections..."
wait_for_service "$connection_opts"
